<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
      "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="general_installation">
  <title>General Installation</title>

  <section>
    <para>This section of the document describes the general installation
    process of the negotiation module, the following chapters in this guide
    describe the specific configuration requirements for the KDC and the web
    browser.</para>

    <para>This documentation covers two topics.</para>

    <itemizedlist>
      <listitem>
        <para>Installation and configuration of the library itself.</para>
      </listitem>

      <listitem>
        <para>Installation of the negotiation toolkit to test the
        installation.</para>
      </listitem>
    </itemizedlist>

    <para>It is recommended that you use the negotiation toolkit to test that
    the security settings are correctly working before attempting to secure
    your own web application, this way you can eliminate if any problems are
    specific to your web application and also use the toolkit to obtain
    additional debug information.</para>
  </section>

  <section>
    <title>Authenticator Installation</title>

    <para>The authenticator is contained within a single jar
    'jboss-negotiation.jar', this jar should be placed in the following
    location: -</para>

    <para> {jboss.home}/server/{configuration}/lib</para>

    <para>After copying the jar to the above location you will need to add the
    authenticator itself to the following descriptor: -</para>

    <para>
    {jboss.home}/server/{configuration}/deploy/jboss-web.deployer/META-INF/jboss-service.xml</para>

    <para>Within this descriptor you should see a set of authenticators, to
    add SPNEGO you should add the following entry: -</para>

      <programlisting>
      <![CDATA[
<java:property>
  <java:key>SPNEGO</java:key>
  <java:value>
    org.jboss.security.negotiation.spnego.SPNEGOAuthenticator
  </java:value>
</java:property>
      ]]>
      </programlisting>      
      
    <para>The key can be any value you choose, however using SPNEGO is
    recommended to be consistent with the rest of this document.</para>
  </section>

  <section>
    <title>Realm Properties</title>

    <para>If you are running your JBoss installation on a host which is
    already configured to authenticate against a Kerberos KDC then you can
    skip this step, however if the host is not already configured against a
    KDC or if you need JBoss to authenticate against a different KDC a couple
    of system properties need to be set so that JBoss can identify the correct
    realm and kdc.</para>

    <para>The two properties that need to be set are.</para>

    <itemizedlist>
      <listitem>
        <para>java.security.krb5.realm - This is the Kerberos realm to
        authenticate against.</para>
      </listitem>

      <listitem>
        <para>java.security.krb5.kdc - This is the hostname of the KDC
        itself.</para>
      </listitem>
    </itemizedlist>

    <section>
      <title>Command Line</title>

      <para>The easiest way to set the properties is to pass them to JBoss on
      the command line when you start the server e.g.</para>

      <para> ./run.sh -Djava.security.krb5.realm=KERBEROS.JBOSS.ORG
      -Djava.security.krb5.kdc=kerberos.security.jboss.org</para>

      <para></para>
    </section>

    <section>
      <title>System Properties Service</title>

      <para>JBoss also make a properties service available which will allow
      you to define these properties in a descriptor and the properties
      service will set them as JBoss starts, the only requirement is that
      these properties are set before the first authentication attempt - JBoss
      does not allow incomming HTTP connections until the server is completely
      started so this is not a proble.</para>

      <para>The properties service is documented in the Wiki at <link
      linkend="???">http://wiki.jboss.org/wiki/PropertiesService</link></para>

      <para>There is already a deployment of the properties service that you
      can add your properties to, this is in the following descriptor:
      -</para>

      <para>
      {jboss.home}//server/{configuration}/deploy/properties-service.xml</para>

      <para>Add the following attribute to the
      'jboss:type=Service,name=SystemProperties' MBean to set the properties:
      -</para>
      
      <programlisting>
      <![CDATA[
<attribute name="Properties">
 java.security.krb5.kdc=kerberos.security.jboss.org
 java.security.krb5.realm=KERBEROS.JBOSS.ORG
</attribute>
      ]]>
      </programlisting>
      
    </section>
  </section>

  <section>
    <title>Host Security Domain</title>

    <para>The application server requires a security domain that it can use to
    first authenticate against the KDC, in order to configure this a keytab
    will be required for the principal that represents the application server.
    The following chapters will cover the details of setting up a service host
    and obtaining the keytab from the KDC but the general requirements to
    configure the security domain in JBoss are the same.</para>

    <para>Below is an example host security domain: -</para>
    
    <programlisting>
      <![CDATA[
<application-policy name="host">
   <authentication>
      <login-module code="com.sun.security.auth.module.Krb5LoginModule"
         flag="required">
         <module-option name="storeKey">true</module-option>
         <module-option name="useKeyTab">true</module-option>                                                     
         <module-option name="principal">host/testserver.gsslab.rdu.redhat.com@GSSLAB.RDU.REDHAT.COM</module-option>             
         <module-option name="keyTab">/home/darranl/src/security-negotiation/spnego-configuration/descriptors/testserver.keytab</module-option>
         <module-option name="doNotPrompt">true</module-option>
         <module-option name="debug">true</module-option>
      </login-module>
   </authentication>
</application-policy>
      ]]>
    </programlisting>
    
    <para>The selected name of the security domain is not important, later it will be 
    possible which security domain to use to authenticate the server.</para>
    
    <para>The following options are required.</para>
    
    <itemizedlist>
      <listitem><para>storeKey - cache the key obtained locally</para></listitem>
      <listitem><para>useKeyTab - Specify that the key will be loaded from a keyTab</para></listitem>
      <listitem><para>principal - The full name of the principal to obtain from the keytab</para></listitem>
      <listitem><para>keyTab - The full path to the keytab containing the servers key</para></listitem>
      <listitem><para>doNotPrompt - As this is a server disable prompting for the servers password</para></listitem>
      <listitem><para>debug - enable logging if additional debug information</para></listitem>
    </itemizedlist>
    
  </section>
  
  <section>
    <title>Application Security Domain</title>
    
    <para>The application also requires it's own security domain to be defined with a login
    module to work in connection with the SPNEGOAuthenticator and a second login module to load 
    the roles of the authenticated user.    
    </para>
    
    <para>An example security domain is shown below.</para>
    
    <programlisting>
      <![CDATA[
<application-policy name="SPNEGO">
   <authentication>
      <login-module
         code="org.jboss.security.negotiation.spnego.SPNEGOLoginModule"
         flag="requisite">
         <module-option name="password-stacking">useFirstPass</module-option>
         <module-option name="serverSecurityDomain">host</module-option>
      </login-module>
      <login-module
         code="org.jboss.security.auth.spi.UsersRolesLoginModule"
         flag="required">
         <module-option name="password-stacking">useFirstPass</module-option>
         <module-option name="usersProperties">META-INF/spnego-users.properties</module-option>
         <module-option name="rolesProperties">META-INF/spnego-roles.properties</module-option>
      </login-module>
   </authentication>
</application-policy>
      ]]>
    </programlisting>

    <para>The SPNEGOLoginModule requires the following two options.</para>
    
    <itemizedlist>
      <listitem><para>password-stacking - Setting this to useFirstPass allows a second module to load the roles.</para></listitem>
      <listitem><para>serverSecurityDomain - The security domain of the application server as previously defined.</para></listitem>
    </itemizedlist>
  </section>
  
  
  
</chapter>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<appendix id="ldap_login_module">
  <title>Advanced LDAP Login Module</title>

  <para>
    The JBoss Negotiation project includes a new LDAP login module to
    handle the LDAP role searching requirements.
  </para>

  <para>
    The new login module has been based on the existing
    LdapExtLoginModule. The new module now allows for GSSAPI to be used
    for authentication when searching LDAP and the the configuration
    allows for the users search, the authentication or the roles search
    to be skipped as is required.
  </para>

  <section>
    <title>Configuration</title>

    <para>
      The fully qualified classname of the new login module is
      <code>
        org.jboss.security.negotiation.spnego.AdvancedLdapLoginModule
      </code>
    </para>

    <warning>
      <para>
        The classname of this login module is subject to change,
        especially if it migrates to the core security project.
      </para>
    </warning>

    <para>
      The following sections will describe the various configuration
      options for this login module.
    </para>

    <para>
      This login module supports the 'password-stacking', if this module
      is being used in conjunction with other login modules this should
      be set to 'useFirstPass'.
    </para>

    <section>
      <title>Search Connection</title>

      <para>
        The first settings are the setting used to obtain the
        <ulink
          url="http://java.sun.com/j2se/1.5.0/docs/api/javax/naming/ldap/InitialLdapContext.html">
          InitialLdapContext
        </ulink>
        used to search for the user and to search for the users roles.
      </para>

      <para>
        The login module supports obtaining this InitialLdapContext
        using a username and credential or using GSSAPI for a previously
        authenticated user.
      </para>

      <section>
        <title>Username / Credential Authentication</title>

        <para>
          To authenticate using a username and password the following
          settings are required.
        </para>

        <itemizedlist>
          <listitem>
            <para>
              bindDN - The DN used to bind against the LDAP server for
              the user and roles queries. This is some DN with
              read/search permissions on the baseCtxDN and rolesCtxDN
              values.
            </para>
          </listitem>

          <listitem>
            <para>
              bindCredential - The password for the bindDN. This can be
              encrypted if the jaasSecurityDomain is specified.
            </para>
          </listitem>

          <listitem>
            <para>
              jaasSecurityDomain - The JMX ObjectName of the
              JaasSecurityDomain to use to decrypt the
              java.naming.security.principal. The encrypted form of the
              password is that returned by the
              JaasSecurityDomain#encrypt64(byte[]) method. The
              org.jboss.security.plugins.PBEUtils can also be used to
              generate the encrypted form.
            </para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>GSSAPI Authentication</title>

        <itemizedlist>
          <listitem>
            <para>
              bindAuthentication - Set this to GSSAPI for GSSAPI based
              authentication.
            </para>
          </listitem>

          <listitem>
            <para>
              jaasSecurityDomain - The security domain to obtain the
              Subject required for the connection.
            </para>
          </listitem>
        </itemizedlist>

        <note>
          <para>
            For information on defining the required jaasSecurityDomain
            see '
            <xref linkend="host_security_domain" />
            '
          </para>
        </note>
      </section>

      <para>
        As with the original LdapExtLoginModule all of of the properties
        provided to this login mode are passed into the
        InitialLdapContext constructor so you can make use of any of the
        options supported by the LdapCtxFactory you are using.
      </para>

    </section>

    <section>
      <title>User DN Search</title>

      <para>
        The first step this login module performs is to take the
        provided username and search for the DN of the user.
      </para>

      <itemizedlist>
        <listitem>
          <para>
            baseCtxDN - The fixed DN of the context to search for user
            roles. Consider that this is not the Distinguished Name of
            where the actual roles are; rather, this is the DN of where
            the objects containing the user roles are (e.g. for active
            directory, this is the DN where the user account is)
          </para>
        </listitem>

        <listitem>
          <para>
            baseFilter - A search filter used to locate the context of
            the user to authenticate. The input username/userDN as
            obtained from the login module callback will be substituted
            into the filter anywhere a "{0}" expression is seen. This
            substitution behavior comes from the standard
            DirContext?.search(Name, String, Object[], SearchControls?
            cons) method. An common example search filter is
            "(uid={0})".
          </para>
        </listitem>

        <listitem>
          <para>
            searchTimeLimit - The timeout in milliseconds for the
            user/role searches. Defaults to 10000 (10 seconds).
          </para>
        </listitem>
      </itemizedlist>

      <note>
        <para>
          It is possible to disable the user DN search by omitting the
          'baseCtxDN' property. In this case the provided username will
          be used as the DN instead for the following steps in this
          login module.
        </para>
      </note>
    </section>

    <section>
      <title>User Authentication</title>

      <para>
        If this login module is not the first login module and a
        previous login module has already authenticated the user this
        step will be skipped.
      </para>

      <para>
        If no previous login module has authenticated the user this step
        takes the User DN from the User DN search and their provided
        credential and attempts to create a new InitialLdapContext to
        verify that the User DN and credential combination is valid.
      </para>

      <para>
        There is only one additional setting to control the behaviour of
        the user authentication.
      </para>

      <itemizedlist>
        <listitem>
          <para>
            allowEmptyPasswords - A flag indicating if empty (length==0)
            passwords should be passed to the ldap server. An empty
            password is treated as an anonymous login by some ldap
            servers and this may not be a desirable feature. Set this to
            false to reject empty passwords, true to have the ldap
            server validate the empty password. The default is false.
          </para>
        </listitem>
      </itemizedlist>

    </section>

    <section>
      <title>Roles Search</title>

      <para>
        This final step searches for the roles that the user is a member
        of.
      </para>

      <caution>
        <para>
          The settings for this section are similar to the
          LdapExtLoginModule but do be careful at the recursion now
          works by finding the roles listed within a DN.
        </para>
      </caution>

      <itemizedlist>
        <listitem>
          <para>
            rolesCtxDN - The fixed DN of the context to search for user
            roles. Consider that this is not the Distinguished Name of
            where the actual roles are; rather, this is the DN of where
            the objects containing the user roles are (e.g. for active
            directory, this is the DN where the user account is)
          </para>
        </listitem>

        <listitem>
          <para>
            roleFilter - A search filter used to locate the roles
            associated with the authenticated user. The input
            username/userDN as obtained from the login module callback
            will be substituted into the filter anywhere a "{0}"
            expression is seen. The authenticated userDN will be
            substituted into the filter anywhere a "{1}" is seen. An
            example search filter that matches on the input username is:
            "(member={0})". An alternative that matches on the
            authenticated userDN is: "(member={1})".
          </para>
        </listitem>

        <listitem>
          <para>
            roleAttributeIsDN - A flag indicating whether the user's
            role attribute contains the fully distinguished name of a
            role object, or the users's role attribute contains the role
            name. If false, the role name is taken from the value of the
            user's role attribute. If true, the role attribute
            represents the distinguished name of a role object. The role
            name is taken from the value of the roleNameAttributeId`
            attribute of the corresponding object. In certain directory
            schemas (e.g., Microsoft Active Directory), role
            (group)attributes in the user object are stored as DNs to
            role objects instead of as simple names, in which case, this
            property should be set to true. The default value of this
            property is false.
          </para>
        </listitem>

        <listitem>
          <para>
            roleAttributeID - The name of the role attribute of the
            context which corresponds to the name of the role. If the
            roleAttributeIsDN property is set to true, this property is
            the DN of the context to query for the roleNameAttributeID
            attribute. If the roleAttributeIsDN property is set to
            false, this property is the attribute name of the role name.
          </para>
        </listitem>

        <listitem>
          <para>
            roleNameAttributeID - The name of the role attribute of the
            context which corresponds to the name of the role. If the
            roleAttributeIsDN property is set to true, this property is
            used to find the role object's name attribute. If the
            roleAttributeIsDN property is set to false, this property is
            ignored.
          </para>
        </listitem>

        <listitem>
          <para>
            recurseRules - Enable a recursive role search. The login
            module tracks already added roles to cope with cyclic
            references.
          </para>
        </listitem>

        <listitem>
          <para>
            searchScope - Sets the search scope to one of the strings.
            The default is SUBTREE_SCOPE.

            <itemizedlist>
              <listitem>
                <para>
                  OBJECT_SCOPE - only search the named roles context.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONELEVEL_SCOPE - search directly under the named roles
                  context.
                </para>
              </listitem>

              <listitem>
                <para>
                  SUBTREE_SCOPE - If the roles context is not a
                  DirContext?, search only the object. If the roles
                  context is a DirContext?, search the subtree rooted at
                  the named object, including the named object itself
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>

        <listitem>
          <para>
            searchTimeLimit - The timeout in milliseconds for the
            user/role searches. Defaults to 10000 (10 seconds).
          </para>
        </listitem>
      </itemizedlist>

      <note>
        <para>
          The searchTimeLimit setting is shared between both of the
          searches.
        </para>
      </note>
    </section>

  </section>

  <section>
    <title>Examples</title>

    <para>
      Here are some example configurations making use of the new login
      module.
    </para>

    <section>
      <title>Active Directory</title>

      <para>
        Here are two example configurations making use of Active
        Directory, the first example shows the login module being used
        for both of the searches and the authentication. The second
        example shows the login module being chained after the
        SPNEGOLoginModule.
      </para>

      <para>
        The following is an extract of the dumped ldiff from the Active
        Directory domain these examples were tested against.
      </para>

      <programlisting>
        <![CDATA[
dn: CN=Darran Lofthouse,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: user
cn: Darran Lofthouse
distinguishedName: 
 CN=Darran Lofthouse,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
memberOf: CN=Banker,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
name: Darran Lofthouse
sAMAccountName: darranl
userPrincipalName: darranl@vm104.gsslab.rdu.redhat.com

dn: CN=Banker,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
objectClass: top
objectClass: group
cn: Banker
member: 
 CN=Darran Lofthouse,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
distinguishedName: 
 CN=Banker,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
memberOf: CN=Trader,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
name: Banker
sAMAccountName: Banker

dn: CN=Trader,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
objectClass: top
objectClass: group
cn: Trader
member: CN=Banker,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
distinguishedName: 
 CN=Trader,CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com
name: Trader
sAMAccountName: Trader]]>
      </programlisting>

      <section id="full_configuration">
        <title>Full Authentication</title>

        <para>
          The following configuration would require a username and
          password to be provided for the authentication process.
        </para>


        <programlisting>
          <![CDATA[
<application-policy name="SPNEGO">
  <authentication>
    <login-module
      code="org.jboss.security.negotiation.spnego.AdvancedLdapLoginModule"
      flag="required">
      
      <module-option name="bindAuthentication">GSSAPI</module-option>
      <module-option name="jaasSecurityDomain">host</module-option>
      <module-option name="java.naming.provider.url">ldap://VM104:3268</module-option>
        
      <module-option name="baseCtxDN">CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com</module-option>
      <module-option name="baseFilter">(sAMAccountName={0})</module-option>
        
      <module-option name="rolesCtxDN">CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com</module-option>
      <module-option name="roleFilter">(distinguishedName={1})</module-option>
       
      <module-option name="roleAttributeID">memberOf</module-option>
      <module-option name="roleAttributeIsDN">true</module-option>
      <module-option name="roleNameAttributeID">cn</module-option>
        
      <module-option name="recurseRoles">true</module-option>
    </login-module>        
  </authentication>
</application-policy>]]>
        </programlisting>

        <para>
          The first three options 'bindAuthentication',
          'jaasSecurityDomain', and 'java.naming.provider.url' configure
          how the login module will connect to LDAP and how the
          authentication will occur.
        </para>

        <para>
          The 'baseCtxDN' option is the DN to start the search for the
          user, the 'baseFilter' attribute in this example searches for
          the user using the 'sAMAccountName' attribute.
        </para>

        <para>
          The 'rolesCtxDN' is the DN to search for the roles, in this
          example we are searching using the 'memberOf' attribute on the
          user so this DN matches the DN used previously.
        </para>

        <para>
          The roles filter re-locates the user using the distinguished
          name of the user, it is important that this search is DN base
          so that a recursive search can be enabled.
        </para>

        <para>
          The 'roleAttributeID' option specified that the 'memberOf'
          attributes should be read from the user object, the
          'roleAttributeIsDN' option specified that this value is a DN
          so the group object is retrieved and finally the
          'roleNameAttributeID' option specifies that the attribute 'cn'
          should be read from the group. This is the role that this
          login module returns.
        </para>

        <para>
          Finally the 'recurseRoles' attribute is set to true so the DN
          from the located group is used to repeat the roles search so
          if a group is configured with the 'memberOf' attribute then
          this will be recursively searched to locate all of the roles.
        </para>
      </section>

      <section>
        <title>Chained Configuration</title>

        <para>
          The following configuration shows the AdvancedLdapLoginModule
          chained after the SPNEGOLoginModule.
        </para>

        <programlisting>
          <![CDATA[
<application-policy name="SPNEGO">
  <authentication>
    <login-module
     code="org.jboss.security.negotiation.spnego.SPNEGOLoginModule"
     flag="requisite">
      <module-option name="password-stacking">useFirstPass</module-option>
      <module-option name="serverSecurityDomain">host</module-option>
    </login-module>

    <login-module
      code="org.jboss.security.negotiation.spnego.AdvancedLdapLoginModule"
      flag="required">
      <module-option name="password-stacking">useFirstPass</module-option>
      
      <module-option name="bindAuthentication">GSSAPI</module-option>
      <module-option name="jaasSecurityDomain">host</module-option>
      <module-option name="java.naming.provider.url">ldap://VM104:3268</module-option>
       
      <module-option name="baseCtxDN">CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com</module-option>   
      <module-option name="baseFilter">(userPrincipalName={0})</module-option>
            
      <module-option name="rolesCtxDN">CN=Users,DC=vm104,DC=gsslab,DC=rdu,DC=redhat,DC=com</module-option>
      <module-option name="roleFilter">(distinguishedName={1})</module-option>
       
      <module-option name="roleAttributeID">memberOf</module-option>
      <module-option name="roleAttributeIsDN">true</module-option>
      <module-option name="roleNameAttributeID">cn</module-option>
       
      <module-option name="recurseRoles">true</module-option>
    </login-module>
  </authentication>
</application-policy>]]>
        </programlisting>

        <para>
          The majority of this configuration is identical to the
          previous example, the first notable exception is that both
          login modules should have 'password-stacking' to
          'useFirstPass' this allows the first login module to pass the
          username to the second login module.
        </para>

        <para>
          The second change is that now the 'baseFilter' now searched on
          the 'userPrincipalName', this is because this is the name
          identified by the SPNEGOLoginModule.
        </para>

        <para>
          Apart from these changes the rest of these changes are
          identical to '
          <xref linkend="full_configuration" />
          '
        </para>

      </section>
    </section>
  </section>


</appendix>

